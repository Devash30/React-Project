{"version":3,"sources":["Components/Alert.js","Components/Navbar.js","Components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","React","createElement","className","concat","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","Capitalize","msg","Navbar","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleModeSwitch","htmlFor","TextForm","text","setText","useState","Fragment","heading","value","onChange","event","target","rows","style","backgroundColor","color","handleUpClick","newText","showAlert","handleLowClick","handleClearClick","handleCopy","document","getElementById","select","navigator","clipboard","writeText","handleExtraSpace","split","join","length","defaultProps","about","App","setMode","setAlert","setTimeout","toggleMode","body","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.2b074f2a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Alert(props) {\r\n  const Capitalize = (word)=>{\r\n    const lower = word.toLowerCase()\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1)\r\n  }\r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type}`} role=\"alert\">\r\n        <strong>{Capitalize(props.alert.type)} : </strong> {props.alert.msg} \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <div>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\" >\r\n                {/* <Link className=\"nav-link active\" aria-current=\"page\"  to=\"/home\"> */}\r\n                <a className=\"nav-link active\" aria-current=\"page\"  href=\"#\">\r\n                  Home\r\n                  </a>\r\n                {/* </Link> */}\r\n              </li>\r\n              {/* <li className=\"nav-item\" > */}\r\n                {/* <Link className=\"nav-link\" to=\"/about\"> */}\r\n                {/* <a className=\"nav-link\" href=\"#\"> \r\n                  {props.about}\r\n                </a>\r\n              </li> */}\r\n            </ul>\r\n            {/* <form className=\"d-flex\" role=\"search\">\r\n              <input\r\n                className=\"form-control me-2\"\r\n                type=\"search\"\r\n                placeholder=\"Search\"\r\n                aria-label=\"Search\"\r\n              />\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">\r\n                Search\r\n              </button>\r\n            </form> */}\r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                  <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" onClick={props.toggleModeSwitch} id=\"flexSwitchCheckDefault\"/>\r\n                  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\" >Enable Dark Mode</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title : PropTypes.string.isRequired,\r\n    about : PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps= {\r\n    title : \"Add title\",\r\n    about : \"Add about\"\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    // console.log(\"Upercase was changed\" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to uppercase\", \"success\")\r\n  };\r\n\r\n  const handleLowClick = () => {\r\n    // console.log(\"LowerCase was changed\" + text);\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to lowercase\", \"success\")\r\n  };\r\n\r\n  const handleClearClick = () => {\r\n    let newText = \"\";\r\n    setText(newText);\r\n    props.showAlert(\"Cleared textbox\", \"success\")\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    // console.log(\"On change\");\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const handleCopy = () => {\r\n    var text = document.getElementById(\"mybox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Copied data to clipboard\", \"success\")\r\n  };\r\n\r\n  const handleExtraSpace = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(' '));\r\n    props.showAlert(\"Removed extra space\", \"success\")\r\n  };\r\n\r\n  const [text, setText] = useState(\"\");\r\n\r\n  return (\r\n    <>\r\n      <div className={`container text-${props.mode==='light'?'dark':'light'}`}>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"mybox\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            rows=\"8\"\r\n            style={{backgroundColor : props.mode==='dark'?'grey':'white', color : props.mode==='dark'?'white':'black'} }\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary my-3 mx-1\" onClick={handleUpClick}>\r\n          Convert to Upper Case\r\n        </button>\r\n        <button className=\"btn btn-primary my-3 mx-1\" onClick={handleLowClick}>\r\n          Convert to Lower Case\r\n        </button>\r\n        <button\r\n          className=\"btn btn-primary my-3 mx-1\"\r\n          onClick={handleClearClick}\r\n        >\r\n          Clear Text\r\n        </button>\r\n        <button className=\"btn btn-primary my-3 mx-1\" onClick={handleCopy}>\r\n          Copy Text\r\n        </button>\r\n        <button\r\n          className=\"btn btn-primary my-3 mx-1\"\r\n          onClick={handleExtraSpace}\r\n        >\r\n          Remove Extra Space\r\n        </button>\r\n      </div>\r\n\r\n      <div className={`container text-${props.mode==='light'?'dark':'light'}`}>\r\n        <h2>Your text summary</h2>\r\n        <p>\r\n          {text.split(\" \").length} and {text.length} characters\r\n        </p>\r\n        <p>{0.008 * text.split(\" \").length} Minutes to read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:'Enter your text in upper box to print in preview'}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","// Remove any explicit import for React at the top of your files\n\nimport React from 'react';\nimport \"./App.css\";\n//import About from \"./Components/About\";\nimport Alert from \"./Components/Alert\";\nimport Navbar from \"./Components/Navbar\";\nimport TextForm from \"./Components/TextForm\";\nimport { useState } from \"react\";\n// import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"black\";\n      showAlert(\"Dark mode enable successfully\", \"success\");\n      document.title = \"TextUtils - Dark\";\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode enable successfully\", \"success\");\n      document.title = \"TextUtils - Light\";\n    }\n  };\n\n  const [alert, setAlert] = useState(null);\n  const showAlert = (msg, type) => {\n    setAlert({\n      msg: msg,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 3000);\n  };\n\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar\n          title=\"TextUtils\"\n          about=\"About\"\n          mode={mode}\n          toggleModeSwitch={toggleMode}\n        />\n        <Alert alert={alert} showAlert={showAlert} />\n        {/* <Routes> */}\n          {/* <Route exact path=\"/about\" element={<About />} /> */}\n          {/* <Route exact path=\"/home\" element={<TextForm heading = \"Enter text to analyze\" mode={mode} alert={alert} showAlert={showAlert}/>}/></Routes>   */}\n          <TextForm heading = \"Enter text to analyze\" mode={mode} alert={alert} showAlert={showAlert}/>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}